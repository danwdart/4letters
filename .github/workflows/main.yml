name: "4 Letters"
on:
  schedule:
    - cron: "0 2 * * *"
  pull_request:
  push:
  workflow_dispatch:
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup SSH key
      # uses: webfactory/ssh-agent@v0.7.0
      # with:
      #   ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh/
        cat << EOT
        ${{ secrets.SSH_PRIVATE_KEY }}

        EOT > ~/.ssh/id_rsa
        cat ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    - name: Setup private cache server
      run: |
        ssh-keyscan -t rsa ${{ vars.CACHE_SERVER }} >> ~/.ssh/known_hosts
    - name: Test connection
      run: |
        ssh ${{ vars.CACHE_USER }}@${{ vars.CACHE_SERVER }} echo "Hello from cache server!"
    - name: Install Nix
      uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Setup Cachix
      uses: cachix/cachix-action@v11
      with:
        name: dandart
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Build
      run: |
        nix-build
    - name: Push to Cachix
      run: |
        nix-store -qR --include-outputs $(nix-instantiate shell.nix --add-root result/shell --indirect) | cachix push dandart
    - name: Push to private cache server
      run: |
        nix-store -qR --include-outputs $(nix-instantiate shell.nix --add-root result/shell --indirect) | xargs nix-copy-closure --gzip -s --include-outputs ${{ vars.CACHE_USER }}@${{ vars.CACHE_SERVER }}
